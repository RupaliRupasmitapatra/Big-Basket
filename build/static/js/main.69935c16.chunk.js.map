{"version":3,"sources":["components/navbar/Navbar.js","components/home/Home.js","components/products/ProductList.js","components/products/ProductAdmin.js","components/products/CreateProduct.js","components/products/UpdateProduct.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","Fragment","className","to","React","Component","Home","ProductList","props","state","products","errorMessage","Axios","get","then","response","setState","data","catch","err","this","length","map","product","src","image","alt","width","height","name","price","toFixed","qty","ProductAdmin","getProducts","deleteProduct","productId","dataURL","delete","_id","substr","onClick","bind","colSpan","CreateProduct","changeInput","event","target","value","changeImage","a","imageFile","files","base64Image","isSubmitted","Promise","resolve","reject","reader","FileReader","readAsDataURL","addEventListener","result","submitProduct","preventDefault","post","info","onSubmit","required","onChange","type","placeholder","id","htmlFor","rows","style","marginBottom","UpdateProduct","selectedProduct","put","prodId","match","params","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.69935c16.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Navbar extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar navbar-dark bg-success navbar-expand-sm\">\r\n                    <div className=\"container\">\r\n                        <Link to='/' className=\"navbar-brand\">\r\n                           <i className=\"fa fa-shopping-cart\"/> BigBasket</Link>\r\n                        <div className=\"collapse navbar-collapse\">\r\n                            <ul className=\"navbar-nav\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/' className=\"nav-link\">Home</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/products' className=\"nav-link\">Products</Link>\r\n                                </li>\r\n                            </ul>\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link to='/admin' className=\"nav-link\">Admin</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nclass Home extends React.Component{\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"landing-page\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"d-flex flex-column text-center justify-content-center align-items-center h-100\">\r\n                            <h2 className=\"display-3 animated slideInDown\">\r\n                               <i className=\"fa fa-shopping-cart\"/> BigBasket</h2>\r\n                            <p className=\"lead px-3 animated slideInUp\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet assumenda doloremque ea eaque, eligendi eos eum exercitationem laboriosam libero odit porro provident quia quidem sed similique suscipit voluptatem voluptatibus, voluptatum?</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nclass ProductList extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products : [],\r\n            errorMessage : ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let dataURL = `http://127.0.0.1:5000/api/products`;\r\n        Axios.get(dataURL).then((response) => {\r\n            this.setState({\r\n                products : response.data\r\n            });\r\n        }).catch((err) => {\r\n            this.setState({\r\n                errorMessage : err\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container mt-3\">\r\n                    <div className=\"row animated slideInLeft\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-success\">Products Page</p>\r\n                            <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum nesciunt officiis perspiciatis quam voluptate. Alias consequuntur est ipsam iure modi mollitia placeat, ut voluptatem? Dolorem doloribus illo nihil odit veniam.</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row animated zoomIn delay-1s\">\r\n                        {\r\n                            this.state.products.length > 0 ?\r\n                                <React.Fragment>\r\n                                    {\r\n                                        this.state.products.map((product) => {\r\n                                            return (\r\n                                                <div className=\"col-md-3\">\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-header text-center bg-white\">\r\n                                                            <img src={product.image} alt=\"\" width=\"150\" height=\"150\"/>\r\n                                                        </div>\r\n                                                        <div className=\"card-body\">\r\n                                                            <ul className=\"list-group\">\r\n                                                                <li className=\"list-group-item\">\r\n                                                                    Name : {product.name}\r\n                                                                </li>\r\n                                                                <li className=\"list-group-item\">\r\n                                                                    Price : &#8377; {product.price.toFixed(2)}\r\n                                                                </li>\r\n                                                                <li className=\"list-group-item\">\r\n                                                                    Qty : {product.qty} Kgs\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </React.Fragment> : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default ProductList;\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport Axios from \"axios\";\r\n\r\nclass ProductAdmin extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products : [],\r\n            errorMessage : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProducts();\r\n    }\r\n    // componentWillUnmount() {\r\n    //     // fix Warning: Can't perform a React state update on an unmounted component\r\n    //     this.setState = (state,callback)=>{\r\n    //         return;\r\n    //     };\r\n    // }\r\n    // get all products\r\n    getProducts = () => {\r\n        let dataURL = `http://127.0.0.1:5000/api/products`;\r\n        Axios.get(dataURL).then((response) => {\r\n            this.setState({\r\n                products : response.data\r\n            });\r\n        }).catch((err) => {\r\n            this.setState({\r\n                errorMessage : err\r\n            });\r\n        });\r\n    };\r\n\r\n    // deleteProduct\r\n    deleteProduct = (productId) => {\r\n        let dataURL = `http://127.0.0.1:5000/api/products/${productId}`;\r\n        Axios.delete(dataURL).then((response) => {\r\n            this.getProducts();\r\n        }).catch((err) => {\r\n            this.setState({\r\n                errorMessage : err\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container mt-3\">\r\n                    <div className=\"row animated slideInLeft\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-success\">Products Details</p>\r\n                            <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum nesciunt officiis perspiciatis quam voluptate. Alias consequuntur est ipsam iure modi mollitia placeat, ut voluptatem? Dolorem doloribus illo nihil odit veniam.</p>\r\n                            <Link to=\"/create-product\" className=\"btn btn-success btn-sm\">Create Product</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-3 animated zoomIn delay-1s\">\r\n                        <div className=\"col\">\r\n                            <table className=\"table table-hover text-center table-striped table-success\">\r\n                                <thead className=\"bg-dark text-white\">\r\n                                    <tr>\r\n                                        <th>SNO</th>\r\n                                        <th>Product</th>\r\n                                        <th>Name</th>\r\n                                        <th>Price</th>\r\n                                        <th>Qty</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                       this.state.products.length > 0 ?\r\n                                           <React.Fragment>\r\n                                               {\r\n                                                   this.state.products.map((product) => {\r\n                                                       return (\r\n                                                           <tr>\r\n                                                               <td>{product._id.substr(product._id.length - 4)}</td>\r\n                                                               <td>\r\n                                                                   <img src={product.image} alt=\"\" width=\"70\" height=\"70\"/>\r\n                                                               </td>\r\n                                                               <td>{product.name}</td>\r\n                                                               <td>&#8377;{product.price.toFixed(2)}</td>\r\n                                                               <td>{product.qty} Kgs</td>\r\n                                                               <td>\r\n                                                                   <Link to={`/update-product/${product._id}`} className=\"btn btn-secondary btn-sm text-white\">Update</Link>\r\n                                                                   <button onClick={this.deleteProduct.bind(this, product._id)} className=\"btn btn-danger btn-sm text-white\">Delete</button>\r\n                                                               </td>\r\n                                                           </tr>\r\n                                                       )\r\n                                                   })\r\n                                               }\r\n                                           </React.Fragment> : <React.Fragment>\r\n                                            <tr>\r\n                                                <td colSpan=\"6\" className=\"text-danger font-weight-bold\">------------- No Products Available ------------ </td>\r\n                                            </tr>\r\n                                           </React.Fragment>\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default ProductAdmin;\r\n","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProduct extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product : {\r\n                name : '',\r\n                image : '',\r\n                price : '',\r\n                qty : '',\r\n                info : ''\r\n            },\r\n            isSubmitted : false,\r\n            errorMessage : ''\r\n        };\r\n    }\r\n\r\n    // changeInput\r\n    changeInput = (event) => {\r\n        this.setState({\r\n            product : {\r\n                ...this.state.product,\r\n                [event.target.name] : event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    // changeImage\r\n    changeImage = async (event) => {\r\n        let imageFile = event.target.files[0];\r\n        let base64Image = await this.base64Image(imageFile);\r\n        this.setState({\r\n            product : {\r\n                ...this.state.product,\r\n                image : base64Image\r\n            },\r\n            isSubmitted : false,\r\n            errorMessage : ''\r\n        });\r\n    };\r\n\r\n    base64Image = (imageFile) => {\r\n        return new Promise((resolve, reject) => {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(imageFile);\r\n            reader.addEventListener('load', () => {\r\n                if(reader.result){\r\n                    resolve(reader.result);\r\n                }\r\n                else {\r\n                    reject('Error Occured');\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    // submitProduct\r\n    submitProduct = (event) => {\r\n        event.preventDefault();\r\n        let dataURL = `http://127.0.0.1:5000/api/products/`;\r\n        Axios.post(dataURL, this.state.product).then((response) => {\r\n            this.setState({\r\n                isSubmitted : true\r\n            });\r\n        }).catch((err) => {\r\n            this.setState({\r\n                errorMessage : err\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    this.state.isSubmitted ? <Redirect to=\"/admin\"/> :\r\n\r\n                        <div className=\"container mt-3\">\r\n                            <div className=\"row animated slideInLeft\">\r\n                                <div className=\"col\">\r\n                                    <p className=\"h3 text-success\">Create a Product</p>\r\n                                    <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aut,\r\n                                        in placeat? Aperiam aspernatur aut doloribus, est fugiat harum impedit molestias\r\n                                        non nulla perferendis, porro quae veniam veritatis voluptas voluptate\r\n                                        voluptates.</p>\r\n                                </div>\r\n                            </div>\r\n                            {/*<pre>{JSON.stringify(this.state)}</pre>*/}\r\n                             <div className=\"row animated flipInY delay-1s\">\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header bg-dark text-white\">\r\n                                            <p className=\"h4\">Create Product</p>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <form onSubmit={this.submitProduct}>\r\n                                                <div className=\"form-group\">\r\n                                                    <input required\r\n                                                           name=\"name\"\r\n                                                           value={this.state.product.name}\r\n                                                           onChange={this.changeInput}\r\n                                                           type=\"text\" className=\"form-control\"\r\n                                                           placeholder=\"Product Name\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"custom-file\">\r\n                                                        <input required\r\n                                                               onChange={this.changeImage}\r\n                                                               type=\"file\" className=\"custom-file-input\"\r\n                                                               id=\"customFile\"/>\r\n                                                        <label className=\"custom-file-label\" htmlFor=\"customFile\">Product\r\n                                                            Image</label>\r\n                                                        {\r\n                                                            this.state.product.image &&\r\n                                                            <img src={this.state.product.image} alt=\"\" width=\"20\"\r\n                                                                 height=\"20\"/>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input required\r\n                                                           name=\"price\"\r\n                                                           value={this.state.product.price}\r\n                                                           onChange={this.changeInput}\r\n                                                           type=\"number\" className=\"form-control\" placeholder=\"Price\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input required\r\n                                                           name=\"qty\"\r\n                                                           value={this.state.product.qty}\r\n                                                           onChange={this.changeInput}\r\n                                                           type=\"number\" className=\"form-control\"\r\n                                                           placeholder=\"Available Qty\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                            <textarea required\r\n                                                      name=\"info\"\r\n                                                      value={this.state.product.info}\r\n                                                      onChange={this.changeInput}\r\n                                                      className=\"form-control\" rows=\"3\" placeholder=\"General Info\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"submit\" className=\"btn btn-dark btn-sm\"\r\n                                                           value=\"Create Product\"/>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <div style={{marginBottom : '100px'}}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default CreateProduct;\r\n","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass UpdateProduct extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedProduct : {\r\n                name : '',\r\n                image : '',\r\n                price : '',\r\n                qty : '',\r\n                info : ''\r\n            },\r\n            errorMessage : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let prodId =  this.props.match.params.id;\r\n        let dataURL = `http://127.0.0.1:5000/api/products/${prodId}`;\r\n        Axios.get(dataURL).then((response) => {\r\n            this.setState({\r\n                selectedProduct : response.data\r\n            });\r\n        }).catch((err) => {\r\n            this.setState({\r\n                errorMessage : err\r\n            });\r\n        });\r\n    }\r\n\r\n    // changeInput\r\n    changeInput = (event) => {\r\n        this.setState({\r\n            selectedProduct : {\r\n                ...this.state.selectedProduct,\r\n                [event.target.name] : event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    // changeImage\r\n    changeImage = async (event) => {\r\n        let imageFile = event.target.files[0];\r\n        let base64Image = await this.base64Image(imageFile);\r\n        this.setState({\r\n            selectedProduct : {\r\n                ...this.state.selectedProduct,\r\n                image : base64Image\r\n            }\r\n        });\r\n    };\r\n\r\n    // get the base64 string of the image\r\n    base64Image = (imageFile) => {\r\n        return new Promise((resolve, reject) => {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(imageFile);\r\n            reader.addEventListener('load', () => {\r\n                if(reader.result){\r\n                    resolve(reader.result);\r\n                }\r\n                else {\r\n                    reject('Error Occured');\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    // submitProduct\r\n    submitProduct = (event) => {\r\n        event.preventDefault();\r\n        let dataURL = `http://127.0.0.1:5000/api/products/${this.state.selectedProduct._id}`;\r\n        Axios.put(dataURL, this.state.selectedProduct).then((response) => {\r\n            this.setState({\r\n                isSubmitted : true\r\n            });\r\n        }).catch((err) => {\r\n            this.setState({\r\n                errorMessage : err\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    this.state.isSubmitted ? <Redirect to='/admin'/> :\r\n\r\n                        <div className=\"container mt-3\">\r\n                            <div className=\"row animated slideInLeft\">\r\n                                <div className=\"col\">\r\n                                    <p className=\"h3 text-secondary\">Update a Product</p>\r\n                                    <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                                        Accusamus corporis cumque, debitis, delectus dignissimos distinctio expedita\r\n                                        facere fugiat harum id iure, minus neque nesciunt odit officia perferendis porro\r\n                                        tempora ullam.</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row animated flipInY delay-1s\">\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header bg-secondary text-white\">\r\n                                            <p className=\"h4\">Update Product</p>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <form onSubmit={this.submitProduct}>\r\n                                                <div className=\"form-group\">\r\n                                                    <input\r\n                                                        name=\"name\"\r\n                                                        value={this.state.selectedProduct.name}\r\n                                                        onChange={this.changeInput}\r\n                                                        type=\"text\" className=\"form-control\" placeholder=\"Name\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"custom-file\">\r\n                                                        <input\r\n                                                            onChange={this.changeImage}\r\n                                                            type=\"file\" className=\"custom-file-input\" id=\"customFile\"/>\r\n                                                        <label className=\"custom-file-label\" htmlFor=\"customFile\">Product\r\n                                                            Image</label>\r\n                                                        {\r\n                                                            this.state.selectedProduct.image &&\r\n                                                            <img src={this.state.selectedProduct.image} alt=\"\"\r\n                                                                 width=\"20\" height=\"20\"/>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input\r\n                                                        name=\"price\"\r\n                                                        value={this.state.selectedProduct.price}\r\n                                                        onChange={this.changeInput}\r\n                                                        type=\"number\" className=\"form-control\" placeholder=\"Price\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input\r\n                                                        name=\"qty\"\r\n                                                        value={this.state.selectedProduct.qty}\r\n                                                        onChange={this.changeInput}\r\n                                                        type=\"number\" className=\"form-control\" placeholder=\"qty\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                           <textarea\r\n                                               name=\"info\"\r\n                                               value={this.state.selectedProduct.info}\r\n                                               onChange={this.changeInput}\r\n                                               className=\"form-control\" rows=\"3\" placeholder=\"General Info\"/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"submit\" className=\"btn btn-secondary btn-sm\"\r\n                                                           value=\"Update Product\"/>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <div style={{marginBottom : '100px'}}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default UpdateProduct;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router , Route , Switch} from 'react-router-dom';\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport Home from \"./components/home/Home\";\r\nimport ProductList from \"./components/products/ProductList\";\r\nimport ProductAdmin from \"./components/products/ProductAdmin\";\r\nimport CreateProduct from \"./components/products/CreateProduct\";\r\nimport UpdateProduct from \"./components/products/UpdateProduct\";\r\n\r\nclass App extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <Navbar/>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home}/>\r\n                        <Route exact path='/products' component={ProductList}/>\r\n                        <Route exact path='/admin' component={ProductAdmin}/>\r\n                        <Route exact path='/create-product' component={CreateProduct}/>\r\n                        <Route exact path='/update-product/:id' component={UpdateProduct}/>\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","// MDBootstrap css files\r\nimport './bootstrap/css/font-awesome-5.8.1.css';\r\nimport 'mdbootstrap/css/bootstrap.css';\r\nimport 'mdbootstrap/css/mdb.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}